BOOT=src/boot.s
KERNEL=src/kernel.c
ISOFILE=build/zonal.iso
BIN=build/zonal.bin
LINKER=grub/linker.ld

CC=x86_64-elf-gcc
AS=x86_64-elf-as
LD=x86_64-elf-ld
OBJCOPY=x86_64-elf-objcopy
CFLAGS=-ffreestanding -mno-red-zone -m64 -nostdlib -lgcc
ASFLAGS=
LDFLAGS=-T $(LINKER) --oformat=elf64-x86-64

DEBUG_FLAGS=-g

all: build

build: clean
	mkdir -p build
	$(AS) $(ASFLAGS) $(BOOT) -o build/boot.o
	$(CC) $(CFLAGS) $(DEBUG_FLAGS) -c $(KERNEL) -o build/kernel.o
	$(LD) $(LDFLAGS) $(DEBUG_FLAGS) -o build/kernel.elf build/boot.o build/kernel.o
	$(OBJCOPY) -0 binary build/zonal.elf $(BIN)
	rm -rf iso
	mkdir -p iso/boot/grub
	cp $(BIN) iso/boot/kernel.bin
	cp grub/grub.cfg iso/boot/grub/grub.cfg
	grub-mkrescue -o $(ISOFILE) iso

run: build
	qemu-system-x86_64 -cdrom $(ISOFILE)

debug: build
	qemu-system-x86_64 -cdrom $(ISOFILE) -s -S

clean:
	rm -rf build iso
